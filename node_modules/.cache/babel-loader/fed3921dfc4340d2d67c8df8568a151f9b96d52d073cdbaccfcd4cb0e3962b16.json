{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\expense-tracker\\\\expense-tracker\\\\src\\\\pages\\\\Home.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { format } from 'date-fns';\nimport { FiCalendar, FiPlus, FiRefreshCw, FiEdit2, FiTrash2, FiMoon, FiSun } from 'react-icons/fi';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { loadDataFromLocalStorage, saveDataToLocalStorage, calculateCategoryTotals } from '../lib/storage';\nimport AddExpenseModal from '../components/modals/AddExpenseModal';\nimport AddIncomeModal from '../components/modals/AddIncomeModal';\nimport EditExpenseModal from '../components/modals/EditExpenseModal';\nimport { BarChart, Bar, PieChart, Pie, Cell, ResponsiveContainer, LineChart, Line, Tooltip, Legend } from 'recharts';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home({\n  darkMode,\n  setDarkMode\n}) {\n  _s();\n  const navigate = useNavigate();\n  const [isLoading, setIsLoading] = useState(true);\n  const [wallet, setWallet] = useState({\n    id: 1,\n    balance: \"2000\"\n  });\n  const [expenses, setExpenses] = useState([]);\n  const [showAddExpenseModal, setShowAddExpenseModal] = useState(false);\n  const [showAddIncomeModal, setShowAddIncomeModal] = useState(false);\n  const [showEditExpenseModal, setShowEditExpenseModal] = useState(false);\n  const [currentExpense, setCurrentExpense] = useState(null);\n\n  // Budget settings\n  const monthlyBudget = 8000;\n  const savingsGoal = 15000;\n\n  // Calculate category totals\n  const categoryTotals = calculateCategoryTotals(expenses);\n\n  // Prepare chart data\n  const prepareCategoryData = () => {\n    const categories = Object.keys(categoryTotals);\n    return categories.map(category => ({\n      name: category.charAt(0).toUpperCase() + category.slice(1),\n      value: categoryTotals[category],\n      color: getCategoryColor(category)\n    })).filter(item => item.value > 0).sort((a, b) => b.value - a.value);\n  };\n  const getCategoryColor = category => {\n    const colorMap = {\n      food: '#ac5ddf',\n      entertainment: '#ffc32b',\n      travel: '#4bd268',\n      study: '#49a7ff',\n      utilities: '#ff5c81',\n      electronics: '#3ee0cf',\n      other: '#94a3b8'\n    };\n    return colorMap[category.toLowerCase()] || '#94a3b8';\n  };\n\n  // Weekly spending data\n  const generateWeeklyData = () => {\n    const days = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'];\n    const data = days.map(day => {\n      const dayExpenses = expenses.filter(expense => {\n        const expenseDate = new Date(expense.date);\n        const dayOfWeek = expenseDate.getDay(); // 0 = Sunday, 1 = Monday, etc.\n        const dayMap = {\n          'Mon': 1,\n          'Tue': 2,\n          'Wed': 3,\n          'Thu': 4,\n          'Fri': 5,\n          'Sat': 6,\n          'Sun': 0\n        };\n        return dayMap[day] === dayOfWeek;\n      });\n      const totalForDay = dayExpenses.reduce((sum, expense) => sum + parseFloat(expense.amount), 0);\n      return {\n        day,\n        amount: totalForDay\n      };\n    });\n    return data;\n  };\n\n  // Get top expense categories for pie chart\n  const getTopCategories = () => {\n    const categoryData = prepareCategoryData();\n    // Take top 3 categories and group the rest as \"Other\"\n    if (categoryData.length <= 3) return categoryData;\n    const top3 = categoryData.slice(0, 3);\n    const otherTotal = categoryData.slice(3).reduce((sum, item) => sum + item.value, 0);\n    if (otherTotal > 0) {\n      top3.push({\n        name: 'Other',\n        value: otherTotal,\n        color: '#94a3b8'\n      });\n    }\n    return top3;\n  };\n\n  // Load initial data\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const localData = loadDataFromLocalStorage();\n        if (localData) {\n          setWallet(localData.wallet);\n          setExpenses(localData.expenses);\n        }\n      } catch (error) {\n        console.error(\"Error loading data:\", error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  const handleAddIncome = amount => {\n    try {\n      const newBalance = parseFloat(wallet.balance) + amount;\n      const updatedWallet = {\n        ...wallet,\n        balance: newBalance.toString()\n      };\n      setWallet(updatedWallet);\n      saveDataToLocalStorage({\n        wallet: updatedWallet,\n        expenses\n      });\n      toast.success(\"Income added successfully\");\n    } catch (error) {\n      toast.error(\"Failed to add income\");\n    }\n  };\n  const handleAddExpense = data => {\n    try {\n      const newExpense = {\n        id: Date.now(),\n        ...data,\n        amount: parseFloat(data.amount),\n        created_at: new Date()\n      };\n      const newBalance = parseFloat(wallet.balance) - parseFloat(data.amount);\n      if (newBalance < 0) {\n        toast.error(\"Insufficient funds in wallet\");\n        return;\n      }\n      const updatedWallet = {\n        ...wallet,\n        balance: newBalance.toString()\n      };\n      setWallet(updatedWallet);\n      setExpenses(prev => [newExpense, ...prev]);\n      saveDataToLocalStorage({\n        wallet: updatedWallet,\n        expenses: [newExpense, ...expenses]\n      });\n      toast.success(\"Expense added successfully\");\n    } catch (error) {\n      toast.error(\"Failed to add expense\");\n    }\n  };\n  const handleEditExpense = expense => {\n    setCurrentExpense(expense);\n    setShowEditExpenseModal(true);\n  };\n  const handleUpdateExpense = (id, data) => {\n    try {\n      const expenseToUpdate = expenses.find(e => e.id === id);\n      if (!expenseToUpdate) return;\n      const oldAmount = parseFloat(expenseToUpdate.amount);\n      const newAmount = parseFloat(data.amount || oldAmount);\n      const amountDiff = oldAmount - newAmount;\n      const updatedExpense = {\n        ...expenseToUpdate,\n        ...data\n      };\n      setExpenses(prev => prev.map(expense => expense.id === id ? updatedExpense : expense));\n      if (amountDiff !== 0) {\n        const newBalance = parseFloat(wallet.balance) + amountDiff;\n        if (newBalance < 0) {\n          toast.error(\"Insufficient funds in wallet\");\n          return;\n        }\n        const updatedWallet = {\n          ...wallet,\n          balance: newBalance.toString()\n        };\n        setWallet(updatedWallet);\n        saveDataToLocalStorage({\n          wallet: updatedWallet,\n          expenses: expenses.map(expense => expense.id === id ? updatedExpense : expense)\n        });\n      }\n      toast.success(\"Expense updated successfully\");\n    } catch (error) {\n      toast.error(\"Failed to update expense\");\n    }\n  };\n  const handleDeleteExpense = id => {\n    try {\n      const expenseToDelete = expenses.find(e => e.id === id);\n      if (!expenseToDelete) return;\n      setExpenses(prev => prev.filter(expense => expense.id !== id));\n      const newBalance = parseFloat(wallet.balance) + parseFloat(expenseToDelete.amount);\n      const updatedWallet = {\n        ...wallet,\n        balance: newBalance.toString()\n      };\n      setWallet(updatedWallet);\n      saveDataToLocalStorage({\n        wallet: updatedWallet,\n        expenses: expenses.filter(expense => expense.id !== id)\n      });\n      toast.success(\"Expense deleted successfully\");\n    } catch (error) {\n      toast.error(\"Failed to delete expense\");\n    }\n  };\n\n  // Calculate total expenses\n  const totalExpenses = expenses.reduce((sum, expense) => sum + parseFloat(expense.amount), 0);\n\n  // Format current date\n  const currentDate = format(new Date(), 'EEEE, MMMM d, yyyy â€¢ h:mm a');\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this);\n  }\n  const budgetPercentage = Math.min(100, Math.round(totalExpenses / monthlyBudget * 100));\n  const savingsPercentage = Math.min(100, Math.round(parseFloat(wallet.balance) / savingsGoal * 100));\n\n  // Get top category if expenses exist\n  const topCategory = expenses.length > 0 ? Object.entries(categoryTotals).reduce((a, b) => a[1] > b[1] ? a : b)[0] : 'Travel';\n\n  // Weekly data\n  const weeklyData = generateWeeklyData();\n\n  // Top category data for pie chart\n  const topCategoriesData = getTopCategories();\n\n  // Toggle theme handler\n  const toggleTheme = () => {\n    setDarkMode(!darkMode);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-header-separator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"header-title\",\n        children: \"Expense Tracker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-date\",\n        children: [/*#__PURE__*/_jsxDEV(FiCalendar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: currentDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleTheme,\n          className: \"theme-toggle\",\n          style: {\n            background: 'transparent',\n            border: 'none',\n            color: darkMode ? '#fff' : '#1e293b',\n            fontSize: '20px',\n            cursor: 'pointer',\n            marginRight: '15px'\n          },\n          children: darkMode ? /*#__PURE__*/_jsxDEV(FiSun, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 25\n          }, this) : /*#__PURE__*/_jsxDEV(FiMoon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main-nav\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: \"/reports\",\n            children: \"Reports\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/budgets\",\n            children: \"Budgets\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/bills\",\n            children: \"Bills\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: () => setShowAddExpenseModal(true),\n          children: \"+ Add Expense\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline\",\n          onClick: () => setShowAddIncomeModal(true),\n          children: \"+ Add Income\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-grid\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"budget-actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-outline\",\n        onClick: () => navigate('/reports'),\n        children: \"Reports\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-outline\",\n        onClick: () => navigate('/budgets'),\n        children: \"Budgets\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-outline\",\n        onClick: () => navigate('/bills'),\n        children: \"Bills\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 7\n    }, this), showAddExpenseModal && /*#__PURE__*/_jsxDEV(AddExpenseModal, {\n      darkMode: darkMode,\n      onClose: () => setShowAddExpenseModal(false),\n      onAddExpense: data => {\n        handleAddExpense(data);\n        setShowAddExpenseModal(false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 9\n    }, this), showAddIncomeModal && /*#__PURE__*/_jsxDEV(AddIncomeModal, {\n      darkMode: darkMode,\n      onClose: () => setShowAddIncomeModal(false),\n      onAddIncome: amount => {\n        handleAddIncome(amount);\n        setShowAddIncomeModal(false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 9\n    }, this), showEditExpenseModal && currentExpense && /*#__PURE__*/_jsxDEV(EditExpenseModal, {\n      darkMode: darkMode,\n      expense: currentExpense,\n      onClose: () => {\n        setShowEditExpenseModal(false);\n        setCurrentExpense(null);\n      },\n      onUpdateExpense: data => {\n        handleUpdateExpense(currentExpense.id, data);\n        setShowEditExpenseModal(false);\n        setCurrentExpense(null);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n      position: \"bottom-right\",\n      theme: darkMode ? \"dark\" : \"light\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 258,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"28IK0P/T5jTdZIXDF0BdVIwB59M=\", false, function () {\n  return [useNavigate];\n});\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","format","FiCalendar","FiPlus","FiRefreshCw","FiEdit2","FiTrash2","FiMoon","FiSun","ToastContainer","toast","loadDataFromLocalStorage","saveDataToLocalStorage","calculateCategoryTotals","AddExpenseModal","AddIncomeModal","EditExpenseModal","BarChart","Bar","PieChart","Pie","Cell","ResponsiveContainer","LineChart","Line","Tooltip","Legend","jsxDEV","_jsxDEV","Home","darkMode","setDarkMode","_s","navigate","isLoading","setIsLoading","wallet","setWallet","id","balance","expenses","setExpenses","showAddExpenseModal","setShowAddExpenseModal","showAddIncomeModal","setShowAddIncomeModal","showEditExpenseModal","setShowEditExpenseModal","currentExpense","setCurrentExpense","monthlyBudget","savingsGoal","categoryTotals","prepareCategoryData","categories","Object","keys","map","category","name","charAt","toUpperCase","slice","value","color","getCategoryColor","filter","item","sort","a","b","colorMap","food","entertainment","travel","study","utilities","electronics","other","toLowerCase","generateWeeklyData","days","data","day","dayExpenses","expense","expenseDate","Date","date","dayOfWeek","getDay","dayMap","totalForDay","reduce","sum","parseFloat","amount","getTopCategories","categoryData","length","top3","otherTotal","push","fetchData","localData","error","console","handleAddIncome","newBalance","updatedWallet","toString","success","handleAddExpense","newExpense","now","created_at","prev","handleEditExpense","handleUpdateExpense","expenseToUpdate","find","e","oldAmount","newAmount","amountDiff","updatedExpense","handleDeleteExpense","expenseToDelete","totalExpenses","currentDate","className","children","fileName","_jsxFileName","lineNumber","columnNumber","budgetPercentage","Math","min","round","savingsPercentage","topCategory","entries","weeklyData","topCategoriesData","toggleTheme","onClick","style","background","border","fontSize","cursor","marginRight","to","onClose","onAddExpense","onAddIncome","onUpdateExpense","position","theme","_c","$RefreshReg$"],"sources":["D:/GitHub/expense-tracker/expense-tracker/src/pages/Home.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { format } from 'date-fns';\r\nimport { FiCalendar, FiPlus, FiRefreshCw, FiEdit2, FiTrash2, FiMoon, FiSun } from 'react-icons/fi';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { loadDataFromLocalStorage, saveDataToLocalStorage, calculateCategoryTotals } from '../lib/storage';\r\nimport AddExpenseModal from '../components/modals/AddExpenseModal';\r\nimport AddIncomeModal from '../components/modals/AddIncomeModal';\r\nimport EditExpenseModal from '../components/modals/EditExpenseModal';\r\nimport { \r\n  BarChart, Bar, PieChart, Pie, Cell, \r\n  ResponsiveContainer, LineChart, Line,\r\n  Tooltip, Legend\r\n} from 'recharts';\r\nimport '../App.css';\r\n\r\nexport default function Home({ darkMode, setDarkMode }) {\r\n  const navigate = useNavigate();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [wallet, setWallet] = useState({ id: 1, balance: \"2000\" });\r\n  const [expenses, setExpenses] = useState([]);\r\n  const [showAddExpenseModal, setShowAddExpenseModal] = useState(false);\r\n  const [showAddIncomeModal, setShowAddIncomeModal] = useState(false);\r\n  const [showEditExpenseModal, setShowEditExpenseModal] = useState(false);\r\n  const [currentExpense, setCurrentExpense] = useState(null);\r\n  \r\n  // Budget settings\r\n  const monthlyBudget = 8000;\r\n  const savingsGoal = 15000;\r\n\r\n  // Calculate category totals\r\n  const categoryTotals = calculateCategoryTotals(expenses);\r\n  \r\n  // Prepare chart data\r\n  const prepareCategoryData = () => {\r\n    const categories = Object.keys(categoryTotals);\r\n    return categories.map(category => ({\r\n      name: category.charAt(0).toUpperCase() + category.slice(1),\r\n      value: categoryTotals[category],\r\n      color: getCategoryColor(category)\r\n    })).filter(item => item.value > 0).sort((a, b) => b.value - a.value);\r\n  };\r\n  \r\n  const getCategoryColor = (category) => {\r\n    const colorMap = {\r\n      food: '#ac5ddf',\r\n      entertainment: '#ffc32b',\r\n      travel: '#4bd268',\r\n      study: '#49a7ff',\r\n      utilities: '#ff5c81',\r\n      electronics: '#3ee0cf',\r\n      other: '#94a3b8'\r\n    };\r\n    return colorMap[category.toLowerCase()] || '#94a3b8';\r\n  };\r\n  \r\n  // Weekly spending data\r\n  const generateWeeklyData = () => {\r\n    const days = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'];\r\n    const data = days.map(day => {\r\n      const dayExpenses = expenses.filter(expense => {\r\n        const expenseDate = new Date(expense.date);\r\n        const dayOfWeek = expenseDate.getDay(); // 0 = Sunday, 1 = Monday, etc.\r\n        const dayMap = {\r\n          'Mon': 1, 'Tue': 2, 'Wed': 3, 'Thu': 4, 'Fri': 5, 'Sat': 6, 'Sun': 0\r\n        };\r\n        return dayMap[day] === dayOfWeek;\r\n      });\r\n      const totalForDay = dayExpenses.reduce((sum, expense) => sum + parseFloat(expense.amount), 0);\r\n      return {\r\n        day,\r\n        amount: totalForDay\r\n      };\r\n    });\r\n    return data;\r\n  };\r\n\r\n  // Get top expense categories for pie chart\r\n  const getTopCategories = () => {\r\n    const categoryData = prepareCategoryData();\r\n    // Take top 3 categories and group the rest as \"Other\"\r\n    if (categoryData.length <= 3) return categoryData;\r\n    \r\n    const top3 = categoryData.slice(0, 3);\r\n    const otherTotal = categoryData.slice(3).reduce((sum, item) => sum + item.value, 0);\r\n    \r\n    if (otherTotal > 0) {\r\n      top3.push({ name: 'Other', value: otherTotal, color: '#94a3b8' });\r\n    }\r\n    \r\n    return top3;\r\n  };\r\n\r\n  // Load initial data\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const localData = loadDataFromLocalStorage();\r\n        if (localData) {\r\n          setWallet(localData.wallet);\r\n          setExpenses(localData.expenses);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error loading data:\", error);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    \r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleAddIncome = (amount) => {\r\n    try {\r\n      const newBalance = parseFloat(wallet.balance) + amount;\r\n      const updatedWallet = { ...wallet, balance: newBalance.toString() };\r\n      setWallet(updatedWallet);\r\n      \r\n      saveDataToLocalStorage({ wallet: updatedWallet, expenses });\r\n      toast.success(\"Income added successfully\");\r\n    } catch (error) {\r\n      toast.error(\"Failed to add income\");\r\n    }\r\n  };\r\n\r\n  const handleAddExpense = (data) => {\r\n    try {\r\n      const newExpense = {\r\n        id: Date.now(),\r\n        ...data,\r\n        amount: parseFloat(data.amount),\r\n        created_at: new Date()\r\n      };\r\n      \r\n      const newBalance = parseFloat(wallet.balance) - parseFloat(data.amount);\r\n      if (newBalance < 0) {\r\n        toast.error(\"Insufficient funds in wallet\");\r\n        return;\r\n      }\r\n      \r\n      const updatedWallet = { ...wallet, balance: newBalance.toString() };\r\n      setWallet(updatedWallet);\r\n      \r\n      setExpenses(prev => [newExpense, ...prev]);\r\n      \r\n      saveDataToLocalStorage({ \r\n        wallet: updatedWallet, \r\n        expenses: [newExpense, ...expenses] \r\n      });\r\n      \r\n      toast.success(\"Expense added successfully\");\r\n    } catch (error) {\r\n      toast.error(\"Failed to add expense\");\r\n    }\r\n  };\r\n\r\n  const handleEditExpense = (expense) => {\r\n    setCurrentExpense(expense);\r\n    setShowEditExpenseModal(true);\r\n  };\r\n\r\n  const handleUpdateExpense = (id, data) => {\r\n    try {\r\n      const expenseToUpdate = expenses.find(e => e.id === id);\r\n      if (!expenseToUpdate) return;\r\n      \r\n      const oldAmount = parseFloat(expenseToUpdate.amount);\r\n      const newAmount = parseFloat(data.amount || oldAmount);\r\n      const amountDiff = oldAmount - newAmount;\r\n      \r\n      const updatedExpense = { ...expenseToUpdate, ...data };\r\n      \r\n      setExpenses(prev => \r\n        prev.map(expense => expense.id === id ? updatedExpense : expense)\r\n      );\r\n      \r\n      if (amountDiff !== 0) {\r\n        const newBalance = parseFloat(wallet.balance) + amountDiff;\r\n        if (newBalance < 0) {\r\n          toast.error(\"Insufficient funds in wallet\");\r\n          return;\r\n        }\r\n        \r\n        const updatedWallet = { ...wallet, balance: newBalance.toString() };\r\n        setWallet(updatedWallet);\r\n        \r\n        saveDataToLocalStorage({ \r\n          wallet: updatedWallet, \r\n          expenses: expenses.map(expense => \r\n            expense.id === id ? updatedExpense : expense\r\n          ) \r\n        });\r\n      }\r\n      \r\n      toast.success(\"Expense updated successfully\");\r\n    } catch (error) {\r\n      toast.error(\"Failed to update expense\");\r\n    }\r\n  };\r\n\r\n  const handleDeleteExpense = (id) => {\r\n    try {\r\n      const expenseToDelete = expenses.find(e => e.id === id);\r\n      if (!expenseToDelete) return;\r\n      \r\n      setExpenses(prev => prev.filter(expense => expense.id !== id));\r\n      \r\n      const newBalance = parseFloat(wallet.balance) + parseFloat(expenseToDelete.amount);\r\n      const updatedWallet = { ...wallet, balance: newBalance.toString() };\r\n      setWallet(updatedWallet);\r\n      \r\n      saveDataToLocalStorage({ \r\n        wallet: updatedWallet, \r\n        expenses: expenses.filter(expense => expense.id !== id) \r\n      });\r\n      \r\n      toast.success(\"Expense deleted successfully\");\r\n    } catch (error) {\r\n      toast.error(\"Failed to delete expense\");\r\n    }\r\n  };\r\n\r\n  // Calculate total expenses\r\n  const totalExpenses = expenses.reduce((sum, expense) => sum + parseFloat(expense.amount), 0);\r\n\r\n  // Format current date\r\n  const currentDate = format(new Date(), 'EEEE, MMMM d, yyyy â€¢ h:mm a');\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"loading-container\">\r\n        <p>Loading...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const budgetPercentage = Math.min(100, Math.round((totalExpenses / monthlyBudget) * 100));\r\n  const savingsPercentage = Math.min(100, Math.round((parseFloat(wallet.balance) / savingsGoal) * 100));\r\n\r\n  // Get top category if expenses exist\r\n  const topCategory = expenses.length > 0 \r\n    ? Object.entries(categoryTotals).reduce((a, b) => a[1] > b[1] ? a : b)[0] \r\n    : 'Travel';\r\n\r\n  // Weekly data\r\n  const weeklyData = generateWeeklyData();\r\n  \r\n  // Top category data for pie chart\r\n  const topCategoriesData = getTopCategories();\r\n\r\n  // Toggle theme handler\r\n  const toggleTheme = () => {\r\n    setDarkMode(!darkMode);\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      {/* Header separator */}\r\n      <div className=\"app-header-separator\"></div>\r\n      \r\n      {/* Header */}\r\n      <div className=\"header-container\">\r\n        <h1 className=\"header-title\">Expense Tracker</h1>\r\n        \r\n        <div className=\"header-date\">\r\n          <FiCalendar />\r\n          <span>{currentDate}</span>\r\n        </div>\r\n        \r\n        <div className=\"header-actions\">\r\n          {/* Theme Toggle Button */}\r\n          <button \r\n            onClick={toggleTheme} \r\n            className=\"theme-toggle\"\r\n            style={{\r\n              background: 'transparent',\r\n              border: 'none',\r\n              color: darkMode ? '#fff' : '#1e293b',\r\n              fontSize: '20px',\r\n              cursor: 'pointer',\r\n              marginRight: '15px'\r\n            }}\r\n          >\r\n            {darkMode ? <FiSun /> : <FiMoon />}\r\n          </button>\r\n          \r\n          <div className=\"main-nav\">\r\n            <Link to=\"/reports\">Reports</Link>\r\n            <Link to=\"/budgets\">Budgets</Link>\r\n            <Link to=\"/bills\">Bills</Link>\r\n          </div>\r\n          \r\n          <button className=\"btn btn-primary\" onClick={() => setShowAddExpenseModal(true)}>\r\n            + Add Expense\r\n          </button>\r\n          \r\n          <button className=\"btn btn-outline\" onClick={() => setShowAddIncomeModal(true)}>\r\n            + Add Income\r\n          </button>\r\n        </div>\r\n      </div>\r\n      \r\n      {/* Main Dashboard Grid */}\r\n      <div className=\"dashboard-grid\">\r\n        {/* Rest of your component */}\r\n        {/* ... */}\r\n      </div>\r\n      \r\n      {/* Budget Actions */}\r\n      <div className=\"budget-actions\">\r\n        <button className=\"btn btn-outline\" onClick={() => navigate('/reports')}>Reports</button>\r\n        <button className=\"btn btn-outline\" onClick={() => navigate('/budgets')}>Budgets</button>\r\n        <button className=\"btn btn-outline\" onClick={() => navigate('/bills')}>Bills</button>\r\n      </div>\r\n      \r\n      {/* Modals */}\r\n      {showAddExpenseModal && (\r\n        <AddExpenseModal\r\n          darkMode={darkMode}\r\n          onClose={() => setShowAddExpenseModal(false)}\r\n          onAddExpense={(data) => {\r\n            handleAddExpense(data);\r\n            setShowAddExpenseModal(false);\r\n          }}\r\n        />\r\n      )}\r\n\r\n      {showAddIncomeModal && (\r\n        <AddIncomeModal\r\n          darkMode={darkMode}\r\n          onClose={() => setShowAddIncomeModal(false)}\r\n          onAddIncome={(amount) => {\r\n            handleAddIncome(amount);\r\n            setShowAddIncomeModal(false);\r\n          }}\r\n        />\r\n      )}\r\n\r\n      {showEditExpenseModal && currentExpense && (\r\n        <EditExpenseModal\r\n          darkMode={darkMode}\r\n          expense={currentExpense}\r\n          onClose={() => {\r\n            setShowEditExpenseModal(false);\r\n            setCurrentExpense(null);\r\n          }}\r\n          onUpdateExpense={(data) => {\r\n            handleUpdateExpense(currentExpense.id, data);\r\n            setShowEditExpenseModal(false);\r\n            setCurrentExpense(null);\r\n          }}\r\n        />\r\n      )}\r\n\r\n      <ToastContainer position=\"bottom-right\" theme={darkMode ? \"dark\" : \"light\"} />\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}