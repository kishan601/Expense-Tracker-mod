{"ast":null,"code":"// storage.js\nimport { DEFAULT_CATEGORY_TOTALS } from './types';\n\n// Local storage utilities\nexport const loadDataFromLocalStorage = () => {\n  try {\n    const data = localStorage.getItem('expense-tracker-data');\n    if (data) {\n      return JSON.parse(data);\n    }\n    return null;\n  } catch (error) {\n    console.error(\"Error loading from localStorage:\", error);\n    return null;\n  }\n};\nexport const saveDataToLocalStorage = data => {\n  try {\n    localStorage.setItem('expense-tracker-data', JSON.stringify(data));\n  } catch (error) {\n    console.error(\"Error saving to localStorage:\", error);\n  }\n};\nexport const calculateTotalExpenses = expenses => {\n  return expenses.reduce((total, expense) => total + Number(expense.amount), 0);\n};\nexport const calculateCategoryTotals = expenses => {\n  const totals = {\n    ...DEFAULT_CATEGORY_TOTALS\n  };\n  expenses.forEach(expense => {\n    const category = expense.category;\n    if (category in totals) {\n      totals[category] += Number(expense.amount);\n    }\n  });\n  return totals;\n};","map":{"version":3,"names":["DEFAULT_CATEGORY_TOTALS","loadDataFromLocalStorage","data","localStorage","getItem","JSON","parse","error","console","saveDataToLocalStorage","setItem","stringify","calculateTotalExpenses","expenses","reduce","total","expense","Number","amount","calculateCategoryTotals","totals","forEach","category"],"sources":["D:/GitHub/expense-tracker/expense-tracker/src/lib/storage.js"],"sourcesContent":["// storage.js\r\nimport { DEFAULT_CATEGORY_TOTALS } from './types';\r\n\r\n// Local storage utilities\r\nexport const loadDataFromLocalStorage = () => {\r\n  try {\r\n    const data = localStorage.getItem('expense-tracker-data');\r\n    if (data) {\r\n      return JSON.parse(data);\r\n    }\r\n    return null;\r\n  } catch (error) {\r\n    console.error(\"Error loading from localStorage:\", error);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const saveDataToLocalStorage = (data) => {\r\n  try {\r\n    localStorage.setItem('expense-tracker-data', JSON.stringify(data));\r\n  } catch (error) {\r\n    console.error(\"Error saving to localStorage:\", error);\r\n  }\r\n};\r\n\r\nexport const calculateTotalExpenses = (expenses) => {\r\n  return expenses.reduce((total, expense) => total + Number(expense.amount), 0);\r\n};\r\n\r\nexport const calculateCategoryTotals = (expenses) => {\r\n  const totals = { ...DEFAULT_CATEGORY_TOTALS };\r\n  \r\n  expenses.forEach(expense => {\r\n    const category = expense.category;\r\n    if (category in totals) {\r\n      totals[category] += Number(expense.amount);\r\n    }\r\n  });\r\n  \r\n  return totals;\r\n};"],"mappings":"AAAA;AACA,SAASA,uBAAuB,QAAQ,SAAS;;AAEjD;AACA,OAAO,MAAMC,wBAAwB,GAAGA,CAAA,KAAM;EAC5C,IAAI;IACF,MAAMC,IAAI,GAAGC,YAAY,CAACC,OAAO,CAAC,sBAAsB,CAAC;IACzD,IAAIF,IAAI,EAAE;MACR,OAAOG,IAAI,CAACC,KAAK,CAACJ,IAAI,CAAC;IACzB;IACA,OAAO,IAAI;EACb,CAAC,CAAC,OAAOK,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IACxD,OAAO,IAAI;EACb;AACF,CAAC;AAED,OAAO,MAAME,sBAAsB,GAAIP,IAAI,IAAK;EAC9C,IAAI;IACFC,YAAY,CAACO,OAAO,CAAC,sBAAsB,EAAEL,IAAI,CAACM,SAAS,CAACT,IAAI,CAAC,CAAC;EACpE,CAAC,CAAC,OAAOK,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;EACvD;AACF,CAAC;AAED,OAAO,MAAMK,sBAAsB,GAAIC,QAAQ,IAAK;EAClD,OAAOA,QAAQ,CAACC,MAAM,CAAC,CAACC,KAAK,EAAEC,OAAO,KAAKD,KAAK,GAAGE,MAAM,CAACD,OAAO,CAACE,MAAM,CAAC,EAAE,CAAC,CAAC;AAC/E,CAAC;AAED,OAAO,MAAMC,uBAAuB,GAAIN,QAAQ,IAAK;EACnD,MAAMO,MAAM,GAAG;IAAE,GAAGpB;EAAwB,CAAC;EAE7Ca,QAAQ,CAACQ,OAAO,CAACL,OAAO,IAAI;IAC1B,MAAMM,QAAQ,GAAGN,OAAO,CAACM,QAAQ;IACjC,IAAIA,QAAQ,IAAIF,MAAM,EAAE;MACtBA,MAAM,CAACE,QAAQ,CAAC,IAAIL,MAAM,CAACD,OAAO,CAACE,MAAM,CAAC;IAC5C;EACF,CAAC,CAAC;EAEF,OAAOE,MAAM;AACf,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}