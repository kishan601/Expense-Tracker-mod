{"ast":null,"code":"\"use client\";\n\n// src/useIsFetching.ts\nimport * as React from \"react\";\nimport { notifyManager } from \"@tanstack/query-core\";\nimport { useQueryClient } from \"./QueryClientProvider.js\";\nfunction useIsFetching(filters, queryClient) {\n  const client = useQueryClient(queryClient);\n  const queryCache = client.getQueryCache();\n  return React.useSyncExternalStore(React.useCallback(onStoreChange => queryCache.subscribe(notifyManager.batchCalls(onStoreChange)), [queryCache]), () => client.isFetching(filters), () => client.isFetching(filters));\n}\nexport { useIsFetching };","map":{"version":3,"names":["React","notifyManager","useQueryClient","useIsFetching","filters","queryClient","client","queryCache","getQueryCache","useSyncExternalStore","useCallback","onStoreChange","subscribe","batchCalls","isFetching"],"sources":["D:/GitHub/expense-tracker/expense-tracker/node_modules/@tanstack/react-query/build/modern/useIsFetching.js"],"sourcesContent":["\"use client\";\n\n// src/useIsFetching.ts\nimport * as React from \"react\";\nimport { notifyManager } from \"@tanstack/query-core\";\nimport { useQueryClient } from \"./QueryClientProvider.js\";\nfunction useIsFetching(filters, queryClient) {\n  const client = useQueryClient(queryClient);\n  const queryCache = client.getQueryCache();\n  return React.useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) => queryCache.subscribe(notifyManager.batchCalls(onStoreChange)),\n      [queryCache]\n    ),\n    () => client.isFetching(filters),\n    () => client.isFetching(filters)\n  );\n}\nexport {\n  useIsFetching\n};\n//# sourceMappingURL=useIsFetching.js.map"],"mappings":"AAAA,YAAY;;AAEZ;AACA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,aAAa,QAAQ,sBAAsB;AACpD,SAASC,cAAc,QAAQ,0BAA0B;AACzD,SAASC,aAAaA,CAACC,OAAO,EAAEC,WAAW,EAAE;EAC3C,MAAMC,MAAM,GAAGJ,cAAc,CAACG,WAAW,CAAC;EAC1C,MAAME,UAAU,GAAGD,MAAM,CAACE,aAAa,CAAC,CAAC;EACzC,OAAOR,KAAK,CAACS,oBAAoB,CAC/BT,KAAK,CAACU,WAAW,CACdC,aAAa,IAAKJ,UAAU,CAACK,SAAS,CAACX,aAAa,CAACY,UAAU,CAACF,aAAa,CAAC,CAAC,EAChF,CAACJ,UAAU,CACb,CAAC,EACD,MAAMD,MAAM,CAACQ,UAAU,CAACV,OAAO,CAAC,EAChC,MAAME,MAAM,CAACQ,UAAU,CAACV,OAAO,CACjC,CAAC;AACH;AACA,SACED,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}