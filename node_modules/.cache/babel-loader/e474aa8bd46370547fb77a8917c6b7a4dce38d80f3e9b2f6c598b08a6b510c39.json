{"ast":null,"code":"\"use client\";\n\n// src/useMutation.ts\nimport * as React from \"react\";\nimport { MutationObserver, notifyManager } from \"@tanstack/query-core\";\nimport { useQueryClient } from \"./QueryClientProvider.js\";\nimport { noop, shouldThrowError } from \"./utils.js\";\nfunction useMutation(options, queryClient) {\n  const client = useQueryClient(queryClient);\n  const [observer] = React.useState(() => new MutationObserver(client, options));\n  React.useEffect(() => {\n    observer.setOptions(options);\n  }, [observer, options]);\n  const result = React.useSyncExternalStore(React.useCallback(onStoreChange => observer.subscribe(notifyManager.batchCalls(onStoreChange)), [observer]), () => observer.getCurrentResult(), () => observer.getCurrentResult());\n  const mutate = React.useCallback((variables, mutateOptions) => {\n    observer.mutate(variables, mutateOptions).catch(noop);\n  }, [observer]);\n  if (result.error && shouldThrowError(observer.options.throwOnError, [result.error])) {\n    throw result.error;\n  }\n  return {\n    ...result,\n    mutate,\n    mutateAsync: result.mutate\n  };\n}\nexport { useMutation };","map":{"version":3,"names":["React","MutationObserver","notifyManager","useQueryClient","noop","shouldThrowError","useMutation","options","queryClient","client","observer","useState","useEffect","setOptions","result","useSyncExternalStore","useCallback","onStoreChange","subscribe","batchCalls","getCurrentResult","mutate","variables","mutateOptions","catch","error","throwOnError","mutateAsync"],"sources":["D:/GitHub/expense-tracker/expense-tracker/node_modules/@tanstack/react-query/build/modern/useMutation.js"],"sourcesContent":["\"use client\";\n\n// src/useMutation.ts\nimport * as React from \"react\";\nimport { MutationObserver, notifyManager } from \"@tanstack/query-core\";\nimport { useQueryClient } from \"./QueryClientProvider.js\";\nimport { noop, shouldThrowError } from \"./utils.js\";\nfunction useMutation(options, queryClient) {\n  const client = useQueryClient(queryClient);\n  const [observer] = React.useState(\n    () => new MutationObserver(\n      client,\n      options\n    )\n  );\n  React.useEffect(() => {\n    observer.setOptions(options);\n  }, [observer, options]);\n  const result = React.useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) => observer.subscribe(notifyManager.batchCalls(onStoreChange)),\n      [observer]\n    ),\n    () => observer.getCurrentResult(),\n    () => observer.getCurrentResult()\n  );\n  const mutate = React.useCallback(\n    (variables, mutateOptions) => {\n      observer.mutate(variables, mutateOptions).catch(noop);\n    },\n    [observer]\n  );\n  if (result.error && shouldThrowError(observer.options.throwOnError, [result.error])) {\n    throw result.error;\n  }\n  return { ...result, mutate, mutateAsync: result.mutate };\n}\nexport {\n  useMutation\n};\n//# sourceMappingURL=useMutation.js.map"],"mappings":"AAAA,YAAY;;AAEZ;AACA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,gBAAgB,EAAEC,aAAa,QAAQ,sBAAsB;AACtE,SAASC,cAAc,QAAQ,0BAA0B;AACzD,SAASC,IAAI,EAAEC,gBAAgB,QAAQ,YAAY;AACnD,SAASC,WAAWA,CAACC,OAAO,EAAEC,WAAW,EAAE;EACzC,MAAMC,MAAM,GAAGN,cAAc,CAACK,WAAW,CAAC;EAC1C,MAAM,CAACE,QAAQ,CAAC,GAAGV,KAAK,CAACW,QAAQ,CAC/B,MAAM,IAAIV,gBAAgB,CACxBQ,MAAM,EACNF,OACF,CACF,CAAC;EACDP,KAAK,CAACY,SAAS,CAAC,MAAM;IACpBF,QAAQ,CAACG,UAAU,CAACN,OAAO,CAAC;EAC9B,CAAC,EAAE,CAACG,QAAQ,EAAEH,OAAO,CAAC,CAAC;EACvB,MAAMO,MAAM,GAAGd,KAAK,CAACe,oBAAoB,CACvCf,KAAK,CAACgB,WAAW,CACdC,aAAa,IAAKP,QAAQ,CAACQ,SAAS,CAAChB,aAAa,CAACiB,UAAU,CAACF,aAAa,CAAC,CAAC,EAC9E,CAACP,QAAQ,CACX,CAAC,EACD,MAAMA,QAAQ,CAACU,gBAAgB,CAAC,CAAC,EACjC,MAAMV,QAAQ,CAACU,gBAAgB,CAAC,CAClC,CAAC;EACD,MAAMC,MAAM,GAAGrB,KAAK,CAACgB,WAAW,CAC9B,CAACM,SAAS,EAAEC,aAAa,KAAK;IAC5Bb,QAAQ,CAACW,MAAM,CAACC,SAAS,EAAEC,aAAa,CAAC,CAACC,KAAK,CAACpB,IAAI,CAAC;EACvD,CAAC,EACD,CAACM,QAAQ,CACX,CAAC;EACD,IAAII,MAAM,CAACW,KAAK,IAAIpB,gBAAgB,CAACK,QAAQ,CAACH,OAAO,CAACmB,YAAY,EAAE,CAACZ,MAAM,CAACW,KAAK,CAAC,CAAC,EAAE;IACnF,MAAMX,MAAM,CAACW,KAAK;EACpB;EACA,OAAO;IAAE,GAAGX,MAAM;IAAEO,MAAM;IAAEM,WAAW,EAAEb,MAAM,CAACO;EAAO,CAAC;AAC1D;AACA,SACEf,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}