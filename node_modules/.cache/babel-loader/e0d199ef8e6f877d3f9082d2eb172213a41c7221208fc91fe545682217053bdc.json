{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\expense-tracker\\\\expense-tracker\\\\src\\\\pages\\\\Home.jsx\",\n  _s = $RefreshSig$();\n// Home.jsx\nimport React, { useState, useEffect } from 'react';\nimport { format } from 'date-fns';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { FiRefreshCw, FiPlus, FiTrendingUp, FiEdit2, FiTrash2 } from 'react-icons/fi';\nimport { loadDataFromLocalStorage, saveDataToLocalStorage } from '../lib/storage';\nimport DashboardHeader from '../components/DashboardHeader';\nimport WalletCard from '../components/WalletCard';\nimport ExpenseCard from '../components/ExpenseCard';\nimport BudgetCard from '../components/BudgetCard';\nimport TransactionList from '../components/TransactionList';\nimport TopExpensesChart from '../components/TopExpensesChart';\nimport AddExpenseModal from '../components/modals/AddExpenseModal';\nimport AddIncomeModal from '../components/modals/AddIncomeModal';\nimport EditExpenseModal from '../components/modals/EditExpenseModal';\nimport './Home.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home({\n  darkMode,\n  setDarkMode\n}) {\n  _s();\n  const [isLoading, setIsLoading] = useState(true);\n  const [wallet, setWallet] = useState({\n    id: 1,\n    balance: \"2000\"\n  });\n  const [expenses, setExpenses] = useState([]);\n  const [showAddExpenseModal, setShowAddExpenseModal] = useState(false);\n  const [showAddIncomeModal, setShowAddIncomeModal] = useState(false);\n  const [showEditExpenseModal, setShowEditExpenseModal] = useState(false);\n  const [currentExpense, setCurrentExpense] = useState(null);\n\n  // Budget settings\n  const monthlyBudget = 8000;\n  const savingsGoal = 15000;\n\n  // Load initial data\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Try to load from localStorage first as a fallback\n        const localData = loadDataFromLocalStorage();\n        if (localData) {\n          setWallet(localData.wallet);\n          setExpenses(localData.expenses);\n        }\n\n        // Then try to fetch from API\n        try {\n          const walletResponse = await fetch('/api/wallet');\n          const expensesResponse = await fetch('/api/expenses');\n          if (walletResponse.ok && expensesResponse.ok) {\n            const walletData = await walletResponse.json();\n            const expensesData = await expensesResponse.json();\n            setWallet(walletData);\n            setExpenses(expensesData);\n\n            // Save to localStorage for offline use\n            saveDataToLocalStorage({\n              wallet: walletData,\n              expenses: expensesData\n            });\n          }\n        } catch (apiError) {\n          console.error(\"API error:\", apiError);\n          // API failed but we already loaded from localStorage if available\n        }\n      } catch (error) {\n        console.error(\"Error loading data:\", error);\n        toast.error(\"Failed to load data\");\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n\n  // Add income handler\n  const handleAddIncome = async amount => {\n    try {\n      // First update local state optimistically\n      const newBalance = parseFloat(wallet.balance) + amount;\n      const updatedWallet = {\n        ...wallet,\n        balance: newBalance.toString()\n      };\n      setWallet(updatedWallet);\n\n      // Save to localStorage\n      saveDataToLocalStorage({\n        wallet: updatedWallet,\n        expenses\n      });\n\n      // Then try API\n      try {\n        const response = await fetch('/api/wallet/income', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            amount\n          })\n        });\n        if (response.ok) {\n          const serverWallet = await response.json();\n          setWallet(serverWallet);\n          saveDataToLocalStorage({\n            wallet: serverWallet,\n            expenses\n          });\n        }\n      } catch (apiError) {\n        console.error(\"API error when adding income:\", apiError);\n      }\n      toast.success(\"Income added successfully\");\n    } catch (error) {\n      console.error(\"Error adding income:\", error);\n      toast.error(\"Failed to add income\");\n    }\n  };\n\n  // Add expense handler\n  const handleAddExpense = async data => {\n    try {\n      // Create a new expense with temporary ID\n      const newExpense = {\n        id: Date.now(),\n        // temp ID\n        ...data,\n        amount: parseFloat(data.amount),\n        created_at: new Date()\n      };\n\n      // Update state optimistically\n      setExpenses(prev => [newExpense, ...prev]);\n\n      // Update wallet balance\n      const newBalance = parseFloat(wallet.balance) - parseFloat(data.amount);\n      if (newBalance < 0) {\n        toast.error(\"Insufficient funds in wallet\");\n        setExpenses(prev => prev.filter(e => e.id !== newExpense.id));\n        return;\n      }\n      const updatedWallet = {\n        ...wallet,\n        balance: newBalance.toString()\n      };\n      setWallet(updatedWallet);\n\n      // Save to localStorage\n      saveDataToLocalStorage({\n        wallet: updatedWallet,\n        expenses: [newExpense, ...expenses]\n      });\n\n      // Then try API\n      try {\n        const response = await fetch('/api/expenses', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(data)\n        });\n        if (response.ok) {\n          const serverExpense = await response.json();\n\n          // Replace temp expense with server one\n          setExpenses(prev => prev.map(e => e.id === newExpense.id ? serverExpense : e));\n\n          // Get updated wallet from server\n          const walletResponse = await fetch('/api/wallet');\n          if (walletResponse.ok) {\n            const serverWallet = await walletResponse.json();\n            setWallet(serverWallet);\n\n            // Update localStorage\n            saveDataToLocalStorage({\n              wallet: serverWallet,\n              expenses: expenses.map(e => e.id === newExpense.id ? serverExpense : e)\n            });\n          }\n        } else {\n          // Revert changes if API fails\n          setExpenses(prev => prev.filter(e => e.id !== newExpense.id));\n          setWallet(wallet);\n          const errorData = await response.json();\n          throw new Error(errorData.message || 'Failed to add expense');\n        }\n      } catch (apiError) {\n        console.error(\"API error when adding expense:\", apiError);\n      }\n      toast.success(\"Expense added successfully\");\n    } catch (error) {\n      console.error(\"Error adding expense:\", error);\n      toast.error(error.message || \"Failed to add expense\");\n    }\n  };\n\n  // Edit expense handler\n  const handleEditExpense = expense => {\n    setCurrentExpense(expense);\n    setShowEditExpenseModal(true);\n  };\n\n  // Update expense handler\n  const handleUpdateExpense = async (id, data) => {\n    try {\n      // Find the expense to update\n      const expenseToUpdate = expenses.find(e => e.id === id);\n      if (!expenseToUpdate) {\n        toast.error(\"Expense not found\");\n        return;\n      }\n\n      // Calculate wallet balance change\n      const oldAmount = parseFloat(expenseToUpdate.amount);\n      const newAmount = parseFloat(data.amount || oldAmount);\n      const amountDiff = oldAmount - newAmount;\n\n      // Create updated expense\n      const updatedExpense = {\n        ...expenseToUpdate,\n        ...data\n      };\n\n      // Update state optimistically\n      setExpenses(prev => prev.map(expense => expense.id === id ? updatedExpense : expense));\n\n      // Update wallet if amount changed\n      if (amountDiff !== 0) {\n        const newBalance = parseFloat(wallet.balance) + amountDiff;\n        if (newBalance < 0) {\n          toast.error(\"Insufficient funds in wallet\");\n          setExpenses(prev => prev.map(expense => expense.id === id ? expenseToUpdate : expense));\n          return;\n        }\n        const updatedWallet = {\n          ...wallet,\n          balance: newBalance.toString()\n        };\n        setWallet(updatedWallet);\n\n        // Save to localStorage\n        saveDataToLocalStorage({\n          wallet: updatedWallet,\n          expenses: expenses.map(expense => expense.id === id ? updatedExpense : expense)\n        });\n      }\n\n      // Then try API\n      try {\n        const response = await fetch(`/api/expenses/${id}`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(data)\n        });\n        if (response.ok) {\n          const serverExpense = await response.json();\n\n          // Update with server data\n          setExpenses(prev => prev.map(e => e.id === id ? serverExpense : e));\n\n          // Get updated wallet from server\n          const walletResponse = await fetch('/api/wallet');\n          if (walletResponse.ok) {\n            const serverWallet = await walletResponse.json();\n            setWallet(serverWallet);\n\n            // Update localStorage\n            saveDataToLocalStorage({\n              wallet: serverWallet,\n              expenses: expenses.map(e => e.id === id ? serverExpense : e)\n            });\n          }\n        }\n      } catch (apiError) {\n        console.error(\"API error when updating expense:\", apiError);\n      }\n      toast.success(\"Expense updated successfully\");\n    } catch (error) {\n      console.error(\"Error updating expense:\", error);\n      toast.error(error.message || \"Failed to update expense\");\n    }\n  };\n\n  // Delete expense handler\n  const handleDeleteExpense = async id => {\n    try {\n      // Find the expense to delete\n      const expenseToDelete = expenses.find(e => e.id === id);\n      if (!expenseToDelete) {\n        toast.error(\"Expense not found\");\n        return;\n      }\n\n      // Update state optimistically\n      setExpenses(prev => prev.filter(expense => expense.id !== id));\n\n      // Restore amount to wallet\n      const newBalance = parseFloat(wallet.balance) + parseFloat(expenseToDelete.amount);\n      const updatedWallet = {\n        ...wallet,\n        balance: newBalance.toString()\n      };\n      setWallet(updatedWallet);\n\n      // Save to localStorage\n      saveDataToLocalStorage({\n        wallet: updatedWallet,\n        expenses: expenses.filter(expense => expense.id !== id)\n      });\n\n      // Then try API\n      try {\n        const response = await fetch(`/api/expenses/${id}`, {\n          method: 'DELETE'\n        });\n        if (response.ok) {\n          // Get updated wallet from server\n          const walletResponse = await fetch('/api/wallet');\n          if (walletResponse.ok) {\n            const serverWallet = await walletResponse.json();\n            setWallet(serverWallet);\n\n            // Update localStorage\n            saveDataToLocalStorage({\n              wallet: serverWallet,\n              expenses: expenses.filter(expense => expense.id !== id)\n            });\n          }\n        }\n      } catch (apiError) {\n        console.error(\"API error when deleting expense:\", apiError);\n      }\n      toast.success(\"Expense deleted successfully\");\n    } catch (error) {\n      console.error(\"Error deleting expense:\", error);\n      toast.error(\"Failed to delete expense\");\n    }\n  };\n\n  // Calculate total expenses\n  const totalExpenses = expenses.reduce((sum, expense) => sum + parseFloat(expense.amount), 0);\n\n  // Format current date\n  const currentDate = format(new Date(), 'EEEE, MMMM d, yyyy • h:mm a');\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-header-separator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DashboardHeader, {\n      title: \"Expense Tracker\",\n      date: currentDate,\n      onAddExpense: () => setShowAddExpenseModal(true),\n      onAddIncome: () => setShowAddIncomeModal(true),\n      darkMode: darkMode,\n      setDarkMode: setDarkMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card wallet-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"card-title\",\n            children: \"Wallet Balance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-icon\",\n            \"aria-label\": \"Refresh\",\n            children: /*#__PURE__*/_jsxDEV(FiRefreshCw, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"wallet-amount\",\n            children: [\"$\", parseFloat(wallet.balance).toLocaleString('en-US', {\n              minimumFractionDigits: 2,\n              maximumFractionDigits: 2\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sparkline\",\n            children: Array.from({\n              length: 12\n            }, (_, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sparkline-bar\",\n              style: {\n                height: `${Math.floor(Math.random() * 30) + 1}px`,\n                backgroundColor: i === 11 ? '#10b981' : 'rgba(16, 185, 129, 0.5)'\n              }\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sparkline-caption\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [/*#__PURE__*/_jsxDEV(FiTrendingUp, {\n                size: 12\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 386,\n                columnNumber: 21\n              }, this), \" 12%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"wallet-stats\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"wallet-stat\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-label\",\n                children: \"Available\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-value\",\n                children: [\"$\", (parseFloat(wallet.balance) - totalExpenses).toLocaleString('en-US', {\n                  minimumFractionDigits: 2,\n                  maximumFractionDigits: 2\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 392,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-badge\",\n                children: \"60%\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"wallet-stat\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-label\",\n                children: \"Spent\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 397,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-value\",\n                children: [\"$\", totalExpenses.toLocaleString('en-US', {\n                  minimumFractionDigits: 2,\n                  maximumFractionDigits: 2\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 398,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"savings-goal\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"savings-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"savings-label\",\n                children: \"Savings Goal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"savings-amount\",\n                children: [\"$\", savingsGoal.toLocaleString('en-US')]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 405,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-bar\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress-value\",\n                style: {\n                  width: `${Math.min(100, parseFloat(wallet.balance) / savingsGoal * 100)}%`,\n                  backgroundColor: 'var(--primary)'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 409,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"savings-meta\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: [Math.round(parseFloat(wallet.balance) / savingsGoal * 100), \"% completed\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 419,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"$\", parseFloat(wallet.balance).toLocaleString('en-US'), \" / $\", savingsGoal.toLocaleString('en-US')]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 420,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-success btn-block\",\n            onClick: () => setShowAddIncomeModal(true),\n            children: [/*#__PURE__*/_jsxDEV(FiRefreshCw, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 15\n            }, this), \"Add Income\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card expense-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"card-title\",\n            children: \"Expenses\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-icon\",\n            onClick: () => setShowAddExpenseModal(true),\n            \"aria-label\": \"Add expense\",\n            children: /*#__PURE__*/_jsxDEV(FiPlus, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"expense-amount\",\n            children: [\"$\", totalExpenses.toLocaleString('en-US', {\n              minimumFractionDigits: 2,\n              maximumFractionDigits: 2\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-bar\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-value\",\n              style: {\n                width: `${Math.min(100, totalExpenses / monthlyBudget * 100)}%`,\n                backgroundColor: 'var(--danger)'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"expense-stats\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"expense-stat\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-label\",\n                children: \"Top Category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 454,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-value\",\n                children: \"Travel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 455,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 453,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"expense-stat\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-label\",\n                children: \"Avg. Expense\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 459,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-value\",\n                children: [\"$\", expenses.length ? (totalExpenses / expenses.length).toFixed(2) : '0.00']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 460,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 458,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-danger btn-block\",\n            onClick: () => setShowAddExpenseModal(true),\n            children: [/*#__PURE__*/_jsxDEV(FiPlus, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 15\n            }, this), \"Add Expense\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card budget-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"card-title\",\n            children: \"Budget Overview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"budget-percentage\",\n            children: [Math.min(100, Math.round(totalExpenses / monthlyBudget * 100)), \"% used\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"budget-chart\",\n            style: {\n              position: 'relative',\n              height: '200px'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: '140px',\n                height: '140px',\n                margin: '0 auto',\n                borderRadius: '50%',\n                background: `conic-gradient(var(--primary) 0% ${Math.min(100, Math.round(totalExpenses / monthlyBudget * 100))}%, #e2e8f0 ${Math.min(100, Math.round(totalExpenses / monthlyBudget * 100))}% 100%)`,\n                position: 'relative'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  position: 'absolute',\n                  top: '50%',\n                  left: '50%',\n                  transform: 'translate(-50%, -50%)',\n                  width: '110px',\n                  height: '110px',\n                  borderRadius: '50%',\n                  backgroundColor: 'var(--bg-card)',\n                  display: 'flex',\n                  flexDirection: 'column',\n                  justifyContent: 'center',\n                  alignItems: 'center'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    color: 'var(--primary)',\n                    fontSize: '24px',\n                    fontWeight: 'bold'\n                  },\n                  children: [Math.min(100, Math.round(totalExpenses / monthlyBudget * 100)), \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 503,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    color: 'var(--text-secondary)',\n                    fontSize: '12px'\n                  },\n                  children: \"of budget\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 506,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 489,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 481,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"budget-stats\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"budget-stat\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-label\",\n                children: \"Monthly Budget\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 513,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-value\",\n                children: [\"$\", monthlyBudget.toLocaleString('en-US')]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 514,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 512,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"budget-stat\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-label\",\n                children: \"Spent so far\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 518,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-value\",\n                children: [\"$\", totalExpenses.toLocaleString('en-US')]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 519,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 517,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 511,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: 'center',\n              margin: '15px 0'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                color: 'var(--success)'\n              },\n              children: \"You're under budget. Good job!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 524,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontWeight: 'bold',\n                fontSize: '16px'\n              },\n              children: [\"$\", (monthlyBudget - totalExpenses).toLocaleString('en-US'), \" remaining\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 525,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 523,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"budget-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-outline\",\n              children: \"Reports\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 531,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-outline\",\n              children: \"Budgets\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 532,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-outline\",\n              children: \"Bills\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 533,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 530,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"transactions-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"card-title\",\n            children: \"Recent Transactions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 543,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: expenses.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"transaction-list\",\n            children: expenses.slice(0, 5).map(expense => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"transaction-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"transaction-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"transaction-title\",\n                  children: expense.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 551,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"transaction-date\",\n                  children: new Date(expense.date).toLocaleDateString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 552,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 550,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"transaction-amount\",\n                children: [\"$\", parseFloat(expense.amount).toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 554,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"transaction-actions\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn-icon\",\n                  onClick: () => handleEditExpense(expense),\n                  \"aria-label\": \"Edit\",\n                  children: /*#__PURE__*/_jsxDEV(FiEdit2, {\n                    size: 14\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 561,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 556,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn-icon\",\n                  onClick: () => handleDeleteExpense(expense.id),\n                  \"aria-label\": \"Delete\",\n                  children: /*#__PURE__*/_jsxDEV(FiTrash2, {\n                    size: 14\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 568,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 563,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 555,\n                columnNumber: 21\n              }, this)]\n            }, expense.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 549,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 547,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"empty-state\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"No transactions yet.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 576,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"empty-state-action\",\n              onClick: () => setShowAddExpenseModal(true),\n              children: \"Add your first expense\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 577,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 575,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 545,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"card-title\",\n            children: \"Top Expenses\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 590,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 589,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: expenses.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"top-expenses-container\",\n            children: /*#__PURE__*/_jsxDEV(TopExpensesChart, {\n              expenses: expenses\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 596,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 594,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"empty-state\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"No expense data available\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 600,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 599,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 592,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 588,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 540,\n      columnNumber: 7\n    }, this), showAddExpenseModal && /*#__PURE__*/_jsxDEV(AddExpenseModal, {\n      onClose: () => setShowAddExpenseModal(false),\n      onAddExpense: data => {\n        handleAddExpense(data);\n        setShowAddExpenseModal(false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 609,\n      columnNumber: 9\n    }, this), showAddIncomeModal && /*#__PURE__*/_jsxDEV(AddIncomeModal, {\n      onClose: () => setShowAddIncomeModal(false),\n      onAddIncome: amount => {\n        handleAddIncome(amount);\n        setShowAddIncomeModal(false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 619,\n      columnNumber: 9\n    }, this), showEditExpenseModal && currentExpense && /*#__PURE__*/_jsxDEV(EditExpenseModal, {\n      expense: currentExpense,\n      onClose: () => {\n        setShowEditExpenseModal(false);\n        setCurrentExpense(null);\n      },\n      onUpdateExpense: data => {\n        handleUpdateExpense(currentExpense.id, data);\n        setShowEditExpenseModal(false);\n        setCurrentExpense(null);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 629,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n      position: \"bottom-right\",\n      theme: darkMode ? \"dark\" : \"light\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 643,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 347,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"H9F1C88OzJXv2dbjBZeZDZwRa9s=\");\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","format","ToastContainer","toast","FiRefreshCw","FiPlus","FiTrendingUp","FiEdit2","FiTrash2","loadDataFromLocalStorage","saveDataToLocalStorage","DashboardHeader","WalletCard","ExpenseCard","BudgetCard","TransactionList","TopExpensesChart","AddExpenseModal","AddIncomeModal","EditExpenseModal","jsxDEV","_jsxDEV","Home","darkMode","setDarkMode","_s","isLoading","setIsLoading","wallet","setWallet","id","balance","expenses","setExpenses","showAddExpenseModal","setShowAddExpenseModal","showAddIncomeModal","setShowAddIncomeModal","showEditExpenseModal","setShowEditExpenseModal","currentExpense","setCurrentExpense","monthlyBudget","savingsGoal","fetchData","localData","walletResponse","fetch","expensesResponse","ok","walletData","json","expensesData","apiError","console","error","handleAddIncome","amount","newBalance","parseFloat","updatedWallet","toString","response","method","headers","body","JSON","stringify","serverWallet","success","handleAddExpense","data","newExpense","Date","now","created_at","prev","filter","e","serverExpense","map","errorData","Error","message","handleEditExpense","expense","handleUpdateExpense","expenseToUpdate","find","oldAmount","newAmount","amountDiff","updatedExpense","handleDeleteExpense","expenseToDelete","totalExpenses","reduce","sum","currentDate","className","children","fileName","_jsxFileName","lineNumber","columnNumber","title","date","onAddExpense","onAddIncome","size","toLocaleString","minimumFractionDigits","maximumFractionDigits","Array","from","length","_","i","style","height","Math","floor","random","backgroundColor","width","min","round","onClick","toFixed","position","margin","borderRadius","background","top","left","transform","display","flexDirection","justifyContent","alignItems","color","fontSize","fontWeight","textAlign","slice","toLocaleDateString","onClose","onUpdateExpense","theme","_c","$RefreshReg$"],"sources":["D:/GitHub/expense-tracker/expense-tracker/src/pages/Home.jsx"],"sourcesContent":["// Home.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { format } from 'date-fns';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { FiRefreshCw, FiPlus, FiTrendingUp, FiEdit2, FiTrash2 } from 'react-icons/fi'; \r\nimport { loadDataFromLocalStorage, saveDataToLocalStorage } from '../lib/storage';\r\nimport DashboardHeader from '../components/DashboardHeader';\r\nimport WalletCard from '../components/WalletCard';\r\nimport ExpenseCard from '../components/ExpenseCard';\r\nimport BudgetCard from '../components/BudgetCard';\r\nimport TransactionList from '../components/TransactionList';\r\nimport TopExpensesChart from '../components/TopExpensesChart';\r\nimport AddExpenseModal from '../components/modals/AddExpenseModal';\r\nimport AddIncomeModal from '../components/modals/AddIncomeModal';\r\nimport EditExpenseModal from '../components/modals/EditExpenseModal';\r\nimport './Home.css';\r\n\r\nexport default function Home({ darkMode, setDarkMode }) {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [wallet, setWallet] = useState({ id: 1, balance: \"2000\" });\r\n  const [expenses, setExpenses] = useState([]);\r\n  const [showAddExpenseModal, setShowAddExpenseModal] = useState(false);\r\n  const [showAddIncomeModal, setShowAddIncomeModal] = useState(false);\r\n  const [showEditExpenseModal, setShowEditExpenseModal] = useState(false);\r\n  const [currentExpense, setCurrentExpense] = useState(null);\r\n  \r\n  // Budget settings\r\n  const monthlyBudget = 8000;\r\n  const savingsGoal = 15000;\r\n\r\n  // Load initial data\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        // Try to load from localStorage first as a fallback\r\n        const localData = loadDataFromLocalStorage();\r\n        if (localData) {\r\n          setWallet(localData.wallet);\r\n          setExpenses(localData.expenses);\r\n        }\r\n        \r\n        // Then try to fetch from API\r\n        try {\r\n          const walletResponse = await fetch('/api/wallet');\r\n          const expensesResponse = await fetch('/api/expenses');\r\n          \r\n          if (walletResponse.ok && expensesResponse.ok) {\r\n            const walletData = await walletResponse.json();\r\n            const expensesData = await expensesResponse.json();\r\n            \r\n            setWallet(walletData);\r\n            setExpenses(expensesData);\r\n            \r\n            // Save to localStorage for offline use\r\n            saveDataToLocalStorage({ wallet: walletData, expenses: expensesData });\r\n          }\r\n        } catch (apiError) {\r\n          console.error(\"API error:\", apiError);\r\n          // API failed but we already loaded from localStorage if available\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error loading data:\", error);\r\n        toast.error(\"Failed to load data\");\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    \r\n    fetchData();\r\n  }, []);\r\n\r\n  // Add income handler\r\n  const handleAddIncome = async (amount) => {\r\n    try {\r\n      // First update local state optimistically\r\n      const newBalance = parseFloat(wallet.balance) + amount;\r\n      const updatedWallet = { ...wallet, balance: newBalance.toString() };\r\n      setWallet(updatedWallet);\r\n      \r\n      // Save to localStorage\r\n      saveDataToLocalStorage({ wallet: updatedWallet, expenses });\r\n      \r\n      // Then try API\r\n      try {\r\n        const response = await fetch('/api/wallet/income', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({ amount }),\r\n        });\r\n        \r\n        if (response.ok) {\r\n          const serverWallet = await response.json();\r\n          setWallet(serverWallet);\r\n          saveDataToLocalStorage({ wallet: serverWallet, expenses });\r\n        }\r\n      } catch (apiError) {\r\n        console.error(\"API error when adding income:\", apiError);\r\n      }\r\n      \r\n      toast.success(\"Income added successfully\");\r\n    } catch (error) {\r\n      console.error(\"Error adding income:\", error);\r\n      toast.error(\"Failed to add income\");\r\n    }\r\n  };\r\n\r\n  // Add expense handler\r\n  const handleAddExpense = async (data) => {\r\n    try {\r\n      // Create a new expense with temporary ID\r\n      const newExpense = {\r\n        id: Date.now(), // temp ID\r\n        ...data,\r\n        amount: parseFloat(data.amount),\r\n        created_at: new Date()\r\n      };\r\n      \r\n      // Update state optimistically\r\n      setExpenses(prev => [newExpense, ...prev]);\r\n      \r\n      // Update wallet balance\r\n      const newBalance = parseFloat(wallet.balance) - parseFloat(data.amount);\r\n      if (newBalance < 0) {\r\n        toast.error(\"Insufficient funds in wallet\");\r\n        setExpenses(prev => prev.filter(e => e.id !== newExpense.id));\r\n        return;\r\n      }\r\n      \r\n      const updatedWallet = { ...wallet, balance: newBalance.toString() };\r\n      setWallet(updatedWallet);\r\n      \r\n      // Save to localStorage\r\n      saveDataToLocalStorage({ \r\n        wallet: updatedWallet, \r\n        expenses: [newExpense, ...expenses] \r\n      });\r\n      \r\n      // Then try API\r\n      try {\r\n        const response = await fetch('/api/expenses', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(data),\r\n        });\r\n        \r\n        if (response.ok) {\r\n          const serverExpense = await response.json();\r\n          \r\n          // Replace temp expense with server one\r\n          setExpenses(prev => \r\n            prev.map(e => e.id === newExpense.id ? serverExpense : e)\r\n          );\r\n          \r\n          // Get updated wallet from server\r\n          const walletResponse = await fetch('/api/wallet');\r\n          if (walletResponse.ok) {\r\n            const serverWallet = await walletResponse.json();\r\n            setWallet(serverWallet);\r\n            \r\n            // Update localStorage\r\n            saveDataToLocalStorage({ \r\n              wallet: serverWallet, \r\n              expenses: expenses.map(e => e.id === newExpense.id ? serverExpense : e)\r\n            });\r\n          }\r\n        } else {\r\n          // Revert changes if API fails\r\n          setExpenses(prev => prev.filter(e => e.id !== newExpense.id));\r\n          setWallet(wallet);\r\n          const errorData = await response.json();\r\n          throw new Error(errorData.message || 'Failed to add expense');\r\n        }\r\n      } catch (apiError) {\r\n        console.error(\"API error when adding expense:\", apiError);\r\n      }\r\n      \r\n      toast.success(\"Expense added successfully\");\r\n    } catch (error) {\r\n      console.error(\"Error adding expense:\", error);\r\n      toast.error(error.message || \"Failed to add expense\");\r\n    }\r\n  };\r\n\r\n  // Edit expense handler\r\n  const handleEditExpense = (expense) => {\r\n    setCurrentExpense(expense);\r\n    setShowEditExpenseModal(true);\r\n  };\r\n\r\n  // Update expense handler\r\n  const handleUpdateExpense = async (id, data) => {\r\n    try {\r\n      // Find the expense to update\r\n      const expenseToUpdate = expenses.find(e => e.id === id);\r\n      if (!expenseToUpdate) {\r\n        toast.error(\"Expense not found\");\r\n        return;\r\n      }\r\n      \r\n      // Calculate wallet balance change\r\n      const oldAmount = parseFloat(expenseToUpdate.amount);\r\n      const newAmount = parseFloat(data.amount || oldAmount);\r\n      const amountDiff = oldAmount - newAmount;\r\n      \r\n      // Create updated expense\r\n      const updatedExpense = { ...expenseToUpdate, ...data };\r\n      \r\n      // Update state optimistically\r\n      setExpenses(prev => \r\n        prev.map(expense => expense.id === id ? updatedExpense : expense)\r\n      );\r\n      \r\n      // Update wallet if amount changed\r\n      if (amountDiff !== 0) {\r\n        const newBalance = parseFloat(wallet.balance) + amountDiff;\r\n        if (newBalance < 0) {\r\n          toast.error(\"Insufficient funds in wallet\");\r\n          setExpenses(prev => \r\n            prev.map(expense => expense.id === id ? expenseToUpdate : expense)\r\n          );\r\n          return;\r\n        }\r\n        \r\n        const updatedWallet = { ...wallet, balance: newBalance.toString() };\r\n        setWallet(updatedWallet);\r\n        \r\n        // Save to localStorage\r\n        saveDataToLocalStorage({ \r\n          wallet: updatedWallet, \r\n          expenses: expenses.map(expense => \r\n            expense.id === id ? updatedExpense : expense\r\n          ) \r\n        });\r\n      }\r\n      \r\n      // Then try API\r\n      try {\r\n        const response = await fetch(`/api/expenses/${id}`, {\r\n          method: 'PUT',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(data),\r\n        });\r\n        \r\n        if (response.ok) {\r\n          const serverExpense = await response.json();\r\n          \r\n          // Update with server data\r\n          setExpenses(prev => \r\n            prev.map(e => e.id === id ? serverExpense : e)\r\n          );\r\n          \r\n          // Get updated wallet from server\r\n          const walletResponse = await fetch('/api/wallet');\r\n          if (walletResponse.ok) {\r\n            const serverWallet = await walletResponse.json();\r\n            setWallet(serverWallet);\r\n            \r\n            // Update localStorage\r\n            saveDataToLocalStorage({ \r\n              wallet: serverWallet, \r\n              expenses: expenses.map(e => e.id === id ? serverExpense : e)\r\n            });\r\n          }\r\n        }\r\n      } catch (apiError) {\r\n        console.error(\"API error when updating expense:\", apiError);\r\n      }\r\n      \r\n      toast.success(\"Expense updated successfully\");\r\n    } catch (error) {\r\n      console.error(\"Error updating expense:\", error);\r\n      toast.error(error.message || \"Failed to update expense\");\r\n    }\r\n  };\r\n\r\n  // Delete expense handler\r\n  const handleDeleteExpense = async (id) => {\r\n    try {\r\n      // Find the expense to delete\r\n      const expenseToDelete = expenses.find(e => e.id === id);\r\n      if (!expenseToDelete) {\r\n        toast.error(\"Expense not found\");\r\n        return;\r\n      }\r\n      \r\n      // Update state optimistically\r\n      setExpenses(prev => prev.filter(expense => expense.id !== id));\r\n      \r\n      // Restore amount to wallet\r\n      const newBalance = parseFloat(wallet.balance) + parseFloat(expenseToDelete.amount);\r\n      const updatedWallet = { ...wallet, balance: newBalance.toString() };\r\n      setWallet(updatedWallet);\r\n      \r\n      // Save to localStorage\r\n      saveDataToLocalStorage({ \r\n        wallet: updatedWallet, \r\n        expenses: expenses.filter(expense => expense.id !== id) \r\n      });\r\n      \r\n      // Then try API\r\n      try {\r\n        const response = await fetch(`/api/expenses/${id}`, {\r\n          method: 'DELETE',\r\n        });\r\n        \r\n        if (response.ok) {\r\n          // Get updated wallet from server\r\n          const walletResponse = await fetch('/api/wallet');\r\n          if (walletResponse.ok) {\r\n            const serverWallet = await walletResponse.json();\r\n            setWallet(serverWallet);\r\n            \r\n            // Update localStorage\r\n            saveDataToLocalStorage({ \r\n              wallet: serverWallet, \r\n              expenses: expenses.filter(expense => expense.id !== id)\r\n            });\r\n          }\r\n        }\r\n      } catch (apiError) {\r\n        console.error(\"API error when deleting expense:\", apiError);\r\n      }\r\n      \r\n      toast.success(\"Expense deleted successfully\");\r\n    } catch (error) {\r\n      console.error(\"Error deleting expense:\", error);\r\n      toast.error(\"Failed to delete expense\");\r\n    }\r\n  };\r\n\r\n  // Calculate total expenses\r\n  const totalExpenses = expenses.reduce((sum, expense) => sum + parseFloat(expense.amount), 0);\r\n\r\n  // Format current date\r\n  const currentDate = format(new Date(), 'EEEE, MMMM d, yyyy • h:mm a');\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"loading-container\">\r\n        <p>Loading...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      {/* App Header with separator */}\r\n      <div className=\"app-header-separator\"></div>\r\n      <DashboardHeader \r\n        title=\"Expense Tracker\" \r\n        date={currentDate}\r\n        onAddExpense={() => setShowAddExpenseModal(true)}\r\n        onAddIncome={() => setShowAddIncomeModal(true)}\r\n        darkMode={darkMode}\r\n        setDarkMode={setDarkMode}\r\n      />\r\n      \r\n      {/* Main Dashboard Grid - IMPROVED SPACING */}\r\n      <div className=\"dashboard-grid\">\r\n        {/* Wallet Card */}\r\n        <div className=\"card wallet-card\">\r\n          <div className=\"card-header\">\r\n            <h2 className=\"card-title\">Wallet Balance</h2>\r\n            <button className=\"btn-icon\" aria-label=\"Refresh\">\r\n              <FiRefreshCw size={16} />\r\n            </button>\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <div className=\"wallet-amount\">${parseFloat(wallet.balance).toLocaleString('en-US', {minimumFractionDigits: 2, maximumFractionDigits: 2})}</div>\r\n            \r\n            {/* Sparkline chart */}\r\n            <div className=\"sparkline\">\r\n              {Array.from({ length: 12 }, (_, i) => (\r\n                <div \r\n                  key={i} \r\n                  className=\"sparkline-bar\" \r\n                  style={{ \r\n                    height: `${Math.floor(Math.random() * 30) + 1}px`,\r\n                    backgroundColor: i === 11 ? '#10b981' : 'rgba(16, 185, 129, 0.5)'\r\n                  }}\r\n                ></div>\r\n              ))}\r\n            </div>\r\n            <div className=\"sparkline-caption\">\r\n              <span><FiTrendingUp size={12} /> 12%</span>\r\n            </div>\r\n            \r\n            <div className=\"wallet-stats\">\r\n              <div className=\"wallet-stat\">\r\n                <div className=\"stat-label\">Available</div>\r\n                <div className=\"stat-value\">${(parseFloat(wallet.balance) - totalExpenses).toLocaleString('en-US', {minimumFractionDigits: 2, maximumFractionDigits: 2})}</div>\r\n                <div className=\"stat-badge\">60%</div>\r\n              </div>\r\n              \r\n              <div className=\"wallet-stat\">\r\n                <div className=\"stat-label\">Spent</div>\r\n                <div className=\"stat-value\">${totalExpenses.toLocaleString('en-US', {minimumFractionDigits: 2, maximumFractionDigits: 2})}</div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"savings-goal\">\r\n              <div className=\"savings-header\">\r\n                <div className=\"savings-label\">Savings Goal</div>\r\n                <div className=\"savings-amount\">${savingsGoal.toLocaleString('en-US')}</div>\r\n              </div>\r\n              \r\n              <div className=\"progress-bar\">\r\n                <div \r\n                  className=\"progress-value\" \r\n                  style={{ \r\n                    width: `${Math.min(100, (parseFloat(wallet.balance) / savingsGoal) * 100)}%`,\r\n                    backgroundColor: 'var(--primary)'\r\n                  }}\r\n                ></div>\r\n              </div>\r\n              \r\n              <div className=\"savings-meta\">\r\n                <span>{Math.round((parseFloat(wallet.balance) / savingsGoal) * 100)}% completed</span>\r\n                <span>${parseFloat(wallet.balance).toLocaleString('en-US')} / ${savingsGoal.toLocaleString('en-US')}</span>\r\n              </div>\r\n            </div>\r\n            \r\n            <button className=\"btn btn-success btn-block\" onClick={() => setShowAddIncomeModal(true)}>\r\n              <FiRefreshCw size={16} />\r\n              Add Income\r\n            </button>\r\n          </div>\r\n        </div>\r\n        \r\n        {/* Expense Card */}\r\n        <div className=\"card expense-card\">\r\n          <div className=\"card-header\">\r\n            <h2 className=\"card-title\">Expenses</h2>\r\n            <button className=\"btn-icon\" onClick={() => setShowAddExpenseModal(true)} aria-label=\"Add expense\">\r\n              <FiPlus size={16} />\r\n            </button>\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <div className=\"expense-amount\">${totalExpenses.toLocaleString('en-US', {minimumFractionDigits: 2, maximumFractionDigits: 2})}</div>\r\n            \r\n            <div className=\"progress-bar\">\r\n              <div \r\n                className=\"progress-value\" \r\n                style={{ \r\n                  width: `${Math.min(100, (totalExpenses / monthlyBudget) * 100)}%`,\r\n                  backgroundColor: 'var(--danger)'\r\n                }}\r\n              ></div>\r\n            </div>\r\n            \r\n            <div className=\"expense-stats\">\r\n              <div className=\"expense-stat\">\r\n                <div className=\"stat-label\">Top Category</div>\r\n                <div className=\"stat-value\">Travel</div>\r\n              </div>\r\n              \r\n              <div className=\"expense-stat\">\r\n                <div className=\"stat-label\">Avg. Expense</div>\r\n                <div className=\"stat-value\">\r\n                  ${expenses.length ? (totalExpenses / expenses.length).toFixed(2) : '0.00'}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            <button className=\"btn btn-danger btn-block\" onClick={() => setShowAddExpenseModal(true)}>\r\n              <FiPlus size={16} />\r\n              Add Expense\r\n            </button>\r\n          </div>\r\n        </div>\r\n        \r\n        {/* Budget Card */}\r\n        <div className=\"card budget-card\">\r\n          <div className=\"card-header\">\r\n            <h2 className=\"card-title\">Budget Overview</h2>\r\n            <div className=\"budget-percentage\">{Math.min(100, Math.round((totalExpenses / monthlyBudget) * 100))}% used</div>\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <div className=\"budget-chart\" style={{ position: 'relative', height: '200px' }}>\r\n              <div style={{ \r\n                width: '140px', \r\n                height: '140px', \r\n                margin: '0 auto', \r\n                borderRadius: '50%',\r\n                background: `conic-gradient(var(--primary) 0% ${Math.min(100, Math.round((totalExpenses / monthlyBudget) * 100))}%, #e2e8f0 ${Math.min(100, Math.round((totalExpenses / monthlyBudget) * 100))}% 100%)`,\r\n                position: 'relative'\r\n              }}>\r\n                <div style={{\r\n                  position: 'absolute',\r\n                  top: '50%',\r\n                  left: '50%',\r\n                  transform: 'translate(-50%, -50%)',\r\n                  width: '110px',\r\n                  height: '110px',\r\n                  borderRadius: '50%',\r\n                  backgroundColor: 'var(--bg-card)',\r\n                  display: 'flex',\r\n                  flexDirection: 'column',\r\n                  justifyContent: 'center',\r\n                  alignItems: 'center'\r\n                }}>\r\n                  <div style={{color: 'var(--primary)', fontSize: '24px', fontWeight: 'bold'}}>\r\n                    {Math.min(100, Math.round((totalExpenses / monthlyBudget) * 100))}%\r\n                  </div>\r\n                  <div style={{color: 'var(--text-secondary)', fontSize: '12px'}}>of budget</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"budget-stats\">\r\n              <div className=\"budget-stat\">\r\n                <div className=\"stat-label\">Monthly Budget</div>\r\n                <div className=\"stat-value\">${monthlyBudget.toLocaleString('en-US')}</div>\r\n              </div>\r\n              \r\n              <div className=\"budget-stat\">\r\n                <div className=\"stat-label\">Spent so far</div>\r\n                <div className=\"stat-value\">${totalExpenses.toLocaleString('en-US')}</div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div style={{ textAlign: 'center', margin: '15px 0' }}>\r\n              <div style={{ color: 'var(--success)' }}>You're under budget. Good job!</div>\r\n              <div style={{ fontWeight: 'bold', fontSize: '16px' }}>\r\n                ${(monthlyBudget - totalExpenses).toLocaleString('en-US')} remaining\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"budget-actions\">\r\n              <button className=\"btn btn-outline\">Reports</button>\r\n              <button className=\"btn btn-outline\">Budgets</button>\r\n              <button className=\"btn btn-outline\">Bills</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Transactions and Top Expenses - IMPROVED SPACING */}\r\n      <div className=\"transactions-grid\">\r\n        <div className=\"card\">\r\n          <div className=\"card-header\">\r\n            <h2 className=\"card-title\">Recent Transactions</h2>\r\n          </div>\r\n          <div className=\"card-body\">\r\n            {expenses.length > 0 ? (\r\n              <div className=\"transaction-list\">\r\n                {expenses.slice(0, 5).map((expense) => (\r\n                  <div key={expense.id} className=\"transaction-item\">\r\n                    <div className=\"transaction-info\">\r\n                      <div className=\"transaction-title\">{expense.title}</div>\r\n                      <div className=\"transaction-date\">{new Date(expense.date).toLocaleDateString()}</div>\r\n                    </div>\r\n                    <div className=\"transaction-amount\">${parseFloat(expense.amount).toFixed(2)}</div>\r\n                    <div className=\"transaction-actions\">\r\n                      <button \r\n                        className=\"btn-icon\" \r\n                        onClick={() => handleEditExpense(expense)}\r\n                        aria-label=\"Edit\"\r\n                      >\r\n                        <FiEdit2 size={14} />\r\n                      </button>\r\n                      <button \r\n                        className=\"btn-icon\" \r\n                        onClick={() => handleDeleteExpense(expense.id)}\r\n                        aria-label=\"Delete\"\r\n                      >\r\n                        <FiTrash2 size={14} />\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            ) : (\r\n              <div className=\"empty-state\">\r\n                <p>No transactions yet.</p>\r\n                <div \r\n                  className=\"empty-state-action\"\r\n                  onClick={() => setShowAddExpenseModal(true)}\r\n                >\r\n                  Add your first expense\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"card\">\r\n          <div className=\"card-header\">\r\n            <h2 className=\"card-title\">Top Expenses</h2>\r\n          </div>\r\n          <div className=\"card-body\">\r\n            {expenses.length > 0 ? (\r\n              <div className=\"top-expenses-container\">\r\n                {/* Visualize top expenses by category here */}\r\n                <TopExpensesChart expenses={expenses} />\r\n              </div>\r\n            ) : (\r\n              <div className=\"empty-state\">\r\n                <p>No expense data available</p>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Modals */}\r\n      {showAddExpenseModal && (\r\n        <AddExpenseModal\r\n          onClose={() => setShowAddExpenseModal(false)}\r\n          onAddExpense={(data) => {\r\n            handleAddExpense(data);\r\n            setShowAddExpenseModal(false);\r\n          }}\r\n        />\r\n      )}\r\n\r\n      {showAddIncomeModal && (\r\n        <AddIncomeModal\r\n          onClose={() => setShowAddIncomeModal(false)}\r\n          onAddIncome={(amount) => {\r\n            handleAddIncome(amount);\r\n            setShowAddIncomeModal(false);\r\n          }}\r\n        />\r\n      )}\r\n\r\n      {showEditExpenseModal && currentExpense && (\r\n        <EditExpenseModal\r\n          expense={currentExpense}\r\n          onClose={() => {\r\n            setShowEditExpenseModal(false);\r\n            setCurrentExpense(null);\r\n          }}\r\n          onUpdateExpense={(data) => {\r\n            handleUpdateExpense(currentExpense.id, data);\r\n            setShowEditExpenseModal(false);\r\n            setCurrentExpense(null);\r\n          }}\r\n        />\r\n      )}\r\n\r\n      <ToastContainer position=\"bottom-right\" theme={darkMode ? \"dark\" : \"light\"} />\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}