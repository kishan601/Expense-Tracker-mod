{"ast":null,"code":"const API_BASE_URL = '/api';\nexport const api = {\n  // Wallet endpoints\n  getWallet: async () => {\n    const response = await fetch(`${API_BASE_URL}/wallet`);\n    if (!response.ok) {\n      throw new Error('Failed to fetch wallet data');\n    }\n    return response.json();\n  },\n  addIncome: async amount => {\n    const response = await fetch(`${API_BASE_URL}/wallet/income`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        amount\n      })\n    });\n    if (!response.ok) {\n      throw new Error('Failed to add income');\n    }\n    return response.json();\n  },\n  // Expenses endpoints\n  getExpenses: async () => {\n    const response = await fetch(`${API_BASE_URL}/expenses`);\n    if (!response.ok) {\n      throw new Error('Failed to fetch expenses');\n    }\n    return response.json();\n  },\n  getExpense: async id => {\n    const response = await fetch(`${API_BASE_URL}/expenses/${id}`);\n    if (!response.ok) {\n      throw new Error('Failed to fetch expense');\n    }\n    return response.json();\n  },\n  addExpense: async data => {\n    const response = await fetch(`${API_BASE_URL}/expenses`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.message || 'Failed to add expense');\n    }\n    return response.json();\n  },\n  updateExpense: async (id, data) => {\n    const response = await fetch(`${API_BASE_URL}/expenses/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.message || 'Failed to update expense');\n    }\n    return response.json();\n  },\n  deleteExpense: async id => {\n    const response = await fetch(`${API_BASE_URL}/expenses/${id}`, {\n      method: 'DELETE'\n    });\n    if (!response.ok) {\n      throw new Error('Failed to delete expense');\n    }\n    return true;\n  }\n};","map":{"version":3,"names":["API_BASE_URL","api","getWallet","response","fetch","ok","Error","json","addIncome","amount","method","headers","body","JSON","stringify","getExpenses","getExpense","id","addExpense","data","errorData","message","updateExpense","deleteExpense"],"sources":["D:/GitHub/expense-tracker/expense-tracker/src/lib/api.js"],"sourcesContent":["const API_BASE_URL = '/api';\r\n\r\nexport const api = {\r\n  // Wallet endpoints\r\n  getWallet: async () => {\r\n    const response = await fetch(`${API_BASE_URL}/wallet`);\r\n    if (!response.ok) {\r\n      throw new Error('Failed to fetch wallet data');\r\n    }\r\n    return response.json();\r\n  },\r\n  \r\n  addIncome: async (amount) => {\r\n    const response = await fetch(`${API_BASE_URL}/wallet/income`, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ amount }),\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      throw new Error('Failed to add income');\r\n    }\r\n    return response.json();\r\n  },\r\n  \r\n  // Expenses endpoints\r\n  getExpenses: async () => {\r\n    const response = await fetch(`${API_BASE_URL}/expenses`);\r\n    if (!response.ok) {\r\n      throw new Error('Failed to fetch expenses');\r\n    }\r\n    return response.json();\r\n  },\r\n  \r\n  getExpense: async (id) => {\r\n    const response = await fetch(`${API_BASE_URL}/expenses/${id}`);\r\n    if (!response.ok) {\r\n      throw new Error('Failed to fetch expense');\r\n    }\r\n    return response.json();\r\n  },\r\n  \r\n  addExpense: async (data) => {\r\n    const response = await fetch(`${API_BASE_URL}/expenses`, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(data),\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      const errorData = await response.json();\r\n      throw new Error(errorData.message || 'Failed to add expense');\r\n    }\r\n    return response.json();\r\n  },\r\n  \r\n  updateExpense: async (id, data) => {\r\n    const response = await fetch(`${API_BASE_URL}/expenses/${id}`, {\r\n      method: 'PUT',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(data),\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      const errorData = await response.json();\r\n      throw new Error(errorData.message || 'Failed to update expense');\r\n    }\r\n    return response.json();\r\n  },\r\n  \r\n  deleteExpense: async (id) => {\r\n    const response = await fetch(`${API_BASE_URL}/expenses/${id}`, {\r\n      method: 'DELETE',\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      throw new Error('Failed to delete expense');\r\n    }\r\n    return true;\r\n  },\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}