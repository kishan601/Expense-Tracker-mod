{"ast":null,"code":"\"use client\";\n\n// src/useMutationState.ts\nimport * as React from \"react\";\nimport { notifyManager, replaceEqualDeep } from \"@tanstack/query-core\";\nimport { useQueryClient } from \"./QueryClientProvider.js\";\nfunction useIsMutating(filters, queryClient) {\n  const client = useQueryClient(queryClient);\n  return useMutationState({\n    filters: {\n      ...filters,\n      status: \"pending\"\n    }\n  }, client).length;\n}\nfunction getResult(mutationCache, options) {\n  return mutationCache.findAll(options.filters).map(mutation => options.select ? options.select(mutation) : mutation.state);\n}\nfunction useMutationState(options = {}, queryClient) {\n  const mutationCache = useQueryClient(queryClient).getMutationCache();\n  const optionsRef = React.useRef(options);\n  const result = React.useRef(null);\n  if (!result.current) {\n    result.current = getResult(mutationCache, options);\n  }\n  React.useEffect(() => {\n    optionsRef.current = options;\n  });\n  return React.useSyncExternalStore(React.useCallback(onStoreChange => mutationCache.subscribe(() => {\n    const nextResult = replaceEqualDeep(result.current, getResult(mutationCache, optionsRef.current));\n    if (result.current !== nextResult) {\n      result.current = nextResult;\n      notifyManager.schedule(onStoreChange);\n    }\n  }), [mutationCache]), () => result.current, () => result.current);\n}\nexport { useIsMutating, useMutationState };","map":{"version":3,"names":["React","notifyManager","replaceEqualDeep","useQueryClient","useIsMutating","filters","queryClient","client","useMutationState","status","length","getResult","mutationCache","options","findAll","map","mutation","select","state","getMutationCache","optionsRef","useRef","result","current","useEffect","useSyncExternalStore","useCallback","onStoreChange","subscribe","nextResult","schedule"],"sources":["D:/GitHub/expense-tracker/expense-tracker/node_modules/@tanstack/react-query/build/modern/useMutationState.js"],"sourcesContent":["\"use client\";\n\n// src/useMutationState.ts\nimport * as React from \"react\";\nimport { notifyManager, replaceEqualDeep } from \"@tanstack/query-core\";\nimport { useQueryClient } from \"./QueryClientProvider.js\";\nfunction useIsMutating(filters, queryClient) {\n  const client = useQueryClient(queryClient);\n  return useMutationState(\n    { filters: { ...filters, status: \"pending\" } },\n    client\n  ).length;\n}\nfunction getResult(mutationCache, options) {\n  return mutationCache.findAll(options.filters).map(\n    (mutation) => options.select ? options.select(mutation) : mutation.state\n  );\n}\nfunction useMutationState(options = {}, queryClient) {\n  const mutationCache = useQueryClient(queryClient).getMutationCache();\n  const optionsRef = React.useRef(options);\n  const result = React.useRef(null);\n  if (!result.current) {\n    result.current = getResult(mutationCache, options);\n  }\n  React.useEffect(() => {\n    optionsRef.current = options;\n  });\n  return React.useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) => mutationCache.subscribe(() => {\n        const nextResult = replaceEqualDeep(\n          result.current,\n          getResult(mutationCache, optionsRef.current)\n        );\n        if (result.current !== nextResult) {\n          result.current = nextResult;\n          notifyManager.schedule(onStoreChange);\n        }\n      }),\n      [mutationCache]\n    ),\n    () => result.current,\n    () => result.current\n  );\n}\nexport {\n  useIsMutating,\n  useMutationState\n};\n//# sourceMappingURL=useMutationState.js.map"],"mappings":"AAAA,YAAY;;AAEZ;AACA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,aAAa,EAAEC,gBAAgB,QAAQ,sBAAsB;AACtE,SAASC,cAAc,QAAQ,0BAA0B;AACzD,SAASC,aAAaA,CAACC,OAAO,EAAEC,WAAW,EAAE;EAC3C,MAAMC,MAAM,GAAGJ,cAAc,CAACG,WAAW,CAAC;EAC1C,OAAOE,gBAAgB,CACrB;IAAEH,OAAO,EAAE;MAAE,GAAGA,OAAO;MAAEI,MAAM,EAAE;IAAU;EAAE,CAAC,EAC9CF,MACF,CAAC,CAACG,MAAM;AACV;AACA,SAASC,SAASA,CAACC,aAAa,EAAEC,OAAO,EAAE;EACzC,OAAOD,aAAa,CAACE,OAAO,CAACD,OAAO,CAACR,OAAO,CAAC,CAACU,GAAG,CAC9CC,QAAQ,IAAKH,OAAO,CAACI,MAAM,GAAGJ,OAAO,CAACI,MAAM,CAACD,QAAQ,CAAC,GAAGA,QAAQ,CAACE,KACrE,CAAC;AACH;AACA,SAASV,gBAAgBA,CAACK,OAAO,GAAG,CAAC,CAAC,EAAEP,WAAW,EAAE;EACnD,MAAMM,aAAa,GAAGT,cAAc,CAACG,WAAW,CAAC,CAACa,gBAAgB,CAAC,CAAC;EACpE,MAAMC,UAAU,GAAGpB,KAAK,CAACqB,MAAM,CAACR,OAAO,CAAC;EACxC,MAAMS,MAAM,GAAGtB,KAAK,CAACqB,MAAM,CAAC,IAAI,CAAC;EACjC,IAAI,CAACC,MAAM,CAACC,OAAO,EAAE;IACnBD,MAAM,CAACC,OAAO,GAAGZ,SAAS,CAACC,aAAa,EAAEC,OAAO,CAAC;EACpD;EACAb,KAAK,CAACwB,SAAS,CAAC,MAAM;IACpBJ,UAAU,CAACG,OAAO,GAAGV,OAAO;EAC9B,CAAC,CAAC;EACF,OAAOb,KAAK,CAACyB,oBAAoB,CAC/BzB,KAAK,CAAC0B,WAAW,CACdC,aAAa,IAAKf,aAAa,CAACgB,SAAS,CAAC,MAAM;IAC/C,MAAMC,UAAU,GAAG3B,gBAAgB,CACjCoB,MAAM,CAACC,OAAO,EACdZ,SAAS,CAACC,aAAa,EAAEQ,UAAU,CAACG,OAAO,CAC7C,CAAC;IACD,IAAID,MAAM,CAACC,OAAO,KAAKM,UAAU,EAAE;MACjCP,MAAM,CAACC,OAAO,GAAGM,UAAU;MAC3B5B,aAAa,CAAC6B,QAAQ,CAACH,aAAa,CAAC;IACvC;EACF,CAAC,CAAC,EACF,CAACf,aAAa,CAChB,CAAC,EACD,MAAMU,MAAM,CAACC,OAAO,EACpB,MAAMD,MAAM,CAACC,OACf,CAAC;AACH;AACA,SACEnB,aAAa,EACbI,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}